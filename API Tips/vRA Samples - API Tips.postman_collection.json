{
	"id": "fd786a45-14e5-d448-70c4-1ae7885147c9",
	"name": "vRA Samples - API Tips",
	"description": "",
	"order": [
		"aea18542-f14a-e4ff-684c-078c2929e95c",
		"4fe35f84-5741-11c5-0882-d0ccc34eb945",
		"a67be5ba-64d7-b5ae-a197-f5c908a5053e",
		"8dcb94b8-96be-9efb-41b6-1c1256b986cd",
		"624312db-9478-b318-ea72-f303d978cbbe"
	],
	"folders": [],
	"timestamp": 1491790528731,
	"owner": "233286",
	"public": false,
	"requests": [
		{
			"id": "4fe35f84-5741-11c5-0882-d0ccc34eb945",
			"name": "Pagination",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "",
			"headers": "Accept: application/json\nAuthorization: Bearer {{token}}\n",
			"method": "GET",
			"pathVariables": {},
			"url": "https://{{va-fqdn}}/reservation-service/api/reservations?page={{page}}&limit={{limit}}",
			"preRequestScript": null,
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "fd786a45-14e5-d448-70c4-1ae7885147c9"
		},
		{
			"id": "624312db-9478-b318-ea72-f303d978cbbe",
			"name": "Catalog Service OData",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": "html",
			"description": "Some catalog-service domain models contain nested objects ending in 'Ref' (which denotes the nested object is a reference to an object rather than a full-blown nested object). When crafting your $filter query, you must remove 'Ref'. Also, each 'Ref' object contains an id and sometimes a label. When attempting to filter on these fields, you must use OData resources of id and name (respectively).\n\nHere's an example to make things clearer. Let's say you want to see all consumer catalog items that are associated with a specific catalog service name. As mentioned in the walkthrough, you'll want to look at the catalogItem domain object (which is linked from the CatalogItem REST Resource documentation page). The catalogItem domain object contains a serviceRef, which itself has a id and label. If we want to filter based on a service name, use this query below.\n\nNote: Notice how even though the serviceRef object contains a label element, we use service (and not serviceRef) and name (and not label) to craft the filter: $filter=service/name eq 'theName'",
			"headers": "Accept: application/json\nAuthorization: Bearer {{token}}\n",
			"method": "GET",
			"pathVariables": {},
			"url": "https://{{va-fqdn}}/catalog-service/api/consumer/catalogItems?$filter=service/name+eq+'{{service-name}}'",
			"preRequestScript": null,
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "fd786a45-14e5-d448-70c4-1ae7885147c9",
			"isFromCollection": true,
			"collectionRequestId": "5ac90cd5-3a1c-e0aa-1933-f70173ce4140"
		},
		{
			"id": "8dcb94b8-96be-9efb-41b6-1c1256b986cd",
			"name": "Filtering",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "eq - Equal - /suppliers?$filter=address/city eq 'Palo Alto'\n\nne - Not equal - /suppliers?$filter=address/city ne 'San Francisco'\n\ngt - Greater than - /products?$filter=price gt 20\n\nge - Greater than or equal - /products?$filter=price ge 10\n\nlt - Less than - /products?$filter=price lt 20\n\nle - Less than or equal - /products?$filter=Price le 100\n\nand - Logical and - /products?$filter=Price le 200 and Price gt 3.5\n\nor - Logical or - /products?$filter=Price le 3.5 or Price gt 200\n\nnot - Logical negation - /products?$filter=not endswith(description,'milk')\n\n( ) - Precedence grouping - /products?$filter=(city eq 'Palo Alto' or city eq 'San Francisco') and price ge 10\n\nstartswith - /customers?$filter=startswith(companyName, 'VMw')\n\nendswith - /customers?$filter=endswith(companyName, 'ware')\n\nsubstringof - /customers?$filter=substringof('Mwa', companyName)\n\nNOTE! substringof uses inverse parameter ordering than other string functions.\n\nlength - customers?$filter=length(companyName) gt 5\n\ntolower - customers?$filter=tolower(companyName) eq 'vmware'\n\ntoupper - customers?$filter=tolower(companyName) eq 'VMWARE'\n\nNOT SUPPORTED: replace, any Arithmetic operations defined by OData specifications - add, sub, mul, div, mod ...",
			"headers": "Accept: application/json\nAuthorization: Bearer {{token}}\n",
			"method": "GET",
			"pathVariables": {},
			"url": "https://{{va-fqdn}}/reservation-service/api/reservations?$filter=name eq '{{reservation-name}}'",
			"preRequestScript": null,
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "fd786a45-14e5-d448-70c4-1ae7885147c9",
			"isFromCollection": true,
			"collectionRequestId": "d999d558-706c-61ee-59c9-dd956c537248"
		},
		{
			"id": "a67be5ba-64d7-b5ae-a197-f5c908a5053e",
			"name": "Sorting",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "",
			"headers": "Accept: application/json\nAuthorization: Bearer {{token}}\n",
			"method": "GET",
			"pathVariables": {},
			"url": "https://{{va-fqdn}}/reservation-service/api/reservations?orderBy=name+desc",
			"preRequestScript": null,
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "fd786a45-14e5-d448-70c4-1ae7885147c9",
			"isFromCollection": true,
			"collectionRequestId": "3a595058-676e-81d1-d702-0793f08613f4"
		},
		{
			"id": "aea18542-f14a-e4ff-684c-078c2929e95c",
			"name": "Login",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": " Returns a token associated with the provided credentials.",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "https://{{va-fqdn}}/identity/api/tokens",
			"preRequestScript": "",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response contains auth token\"] = responseBody.has(\"id\");\npostman.clearEnvironmentVariable(\"token\");\nvar data = JSON.parse(responseBody);\ntests[\"Auth token is not null\"] = data.id !== \"\";\npostman.setEnvironmentVariable(\"token\", data.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionId": "fd786a45-14e5-d448-70c4-1ae7885147c9",
			"rawModeData": "{\"username\":\"{{username}}\",\"password\":\"{{password}}\",\"tenant\":\"{{tenant}}\"}"
		}
	]
}